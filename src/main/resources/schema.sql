DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS mpa_ratings CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS films_likes CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS films_genres CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    user_id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email           VARCHAR(255) NOT NULL UNIQUE,
    login           VARCHAR(255) NOT NULL UNIQUE,
    name            VARCHAR(255),
    birthday        DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id        BIGINT REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    friend_id      BIGINT REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name            VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS mpa_ratings
(
    rating_id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rating_name     VARCHAR(255) NOT NULL UNIQUE,
    description     VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    film_id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name            VARCHAR(255) NOT NULL,
    description     VARCHAR(255) NOT NULL,
    release_date    DATE NOT NULL,
    duration        INTEGER NOT NULL,
    rating_id       INTEGER REFERENCES mpa_ratings(rating_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS films_likes
(
    film_id         BIGINT REFERENCES films(film_id) ON DELETE CASCADE ON UPDATE CASCADE,
    user_id         BIGINT REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY(FILM_ID, USER_ID)
);

CREATE TABLE IF NOT EXISTS films_genres
(
    film_id         BIGINT REFERENCES films(film_id) ON DELETE CASCADE ON UPDATE CASCADE,
    genre_id        INTEGER REFERENCES genres(genre_id) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY(film_id, genre_id)
);
